#include "main.h"

void finish_with_error(MYSQL *con)
{
  fprintf(stderr, "%s\n", mysql_error(con));
  mysql_close(con);
  exit(1);
}

int main(int argc, char **argv)
{

  // SET UP SERVER DATABASE
  system("mysql --host=localhost --user=root --password=root --database=test -e \"source /home/dbilke/server_init.sql;\"");

  MYSQL *con = mysql_init(NULL);

  // CONNECT AND SET UP TABLE
  if (con == NULL)
  {
      fprintf(stderr, "mysql_init() failed\n");
      exit(1);
  }

  if (mysql_real_connect(con, "localhost", "server", "server",
          "srv_clnt", 0, NULL, 0) == NULL)
  {
      finish_with_error(con);
  }

  char *sql = "CREATE TABLE IF NOT EXISTS server(Id INT PRIMARY KEY AUTO_INCREMENT, IP VARCHAR(15))";

  if (mysql_query(con, sql))
  {
      finish_with_error(con);
  }

  if (mysql_query(con, "INSERT INTO server(IP) VALUES('127.0.0.1')"))
  {
      finish_with_error(con);
  }

  if (mysql_query(con, "INSERT INTO server(IP) VALUES('127.0.0.1')"))
  {
      finish_with_error(con);
  }

  int id = mysql_insert_id(con);

  printf("The last inserted row id is: %d\n", id);




  //GET client1 messages
  printf("\n\nMESSAGES FROM CLIENTS:\n(enter "exit" for finishing or everything else for continue)\n");


  char str_code[20];
  do
  {

	  if (mysql_query(con, "SELECT * FROM client"))
	   {
		   finish_with_error(con);
	   }

	   MYSQL_RES *result = mysql_store_result(con);

	   if (result == NULL)
	   {
		   finish_with_error(con);
	   }

	   int num_fields = mysql_num_fields(result);

	   MYSQL_ROW row;

	   while ((row = mysql_fetch_row(result)))
	   {
		   for(int i = 0; i < num_fields; i++)
		   {
			   printf("%s ", row[i] ? row[i] : "NULL");
		   }
			   printf("\n");
	   }
	   scanf("%s", ip);
  }
  while(strcmp(str_code, "exit") == 0)

   mysql_free_result(result);
   mysql_close(con);
  exit(0);
}
