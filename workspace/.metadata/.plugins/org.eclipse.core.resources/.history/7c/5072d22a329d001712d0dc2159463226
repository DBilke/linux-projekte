#include "main.h"

void finish_with_error(MYSQL *con)
{
  fprintf(stderr, "%s\n", mysql_error(con));
  mysql_close(con);
  exit(1);
}

int main(int argc, char **argv)
{

  /* CLIENT FOR MYSQL MESSAGE TRANSFER
   * ENTER pswd, host, username, testdb
   * ENTER client_script
   * ENTER IP of current client
   *
   */

  char pswd[] = "root";
  char host[] = "localhost";
  char username[] = "root";
  char testdb[] = "test";
  char client_ip[] = "127.0.0.1";
  char client_script[] = "/home/dbilke/client1_init.sql"

  char sys_str_cmd[200];
  sprintf(sys_str_cmd, "mysql --host=%s --user=%s --password=%s --database=%s -e \"source %s;\"", host, username, pswd, testdb, client_script);
  system(sys_str_cmd);

  MYSQL *con = mysql_init(NULL);

  if (con == NULL)
  {
      fprintf(stderr, "mysql_init() failed\n");
      exit(1);
  }

  if (mysql_real_connect(con, "localhost", "client", "client",
          "srv_clnt", 0, NULL, 0) == NULL)
  {
      finish_with_error(con);
  }

  char *sql = "CREATE TABLE IF NOT EXISTS client(Id INT PRIMARY KEY AUTO_INCREMENT, IP VARCHAR(15), Message VARCHAR(255))";

  if (mysql_query(con, sql))
  {
      finish_with_error(con);
  }

  char ip[16], msg[256];
  char str_code[20];
  printf("Enter \"exit\" for finishing or everything else for continue");
  do
  {

	  printf("Enter destination  IP: ");
	  scanf("%s", ip);

	  printf("Enter Message: ");
	  scanf("%s", msg);

	  sprintf(sql, "INSERT INTO client(IP, Message) VALUES(%s, %s)", ip, msg);
	  if (mysql_query(con, sql))
	  {
		  finish_with_error(con);
	  }

	  int id = mysql_insert_id(con);

	  printf("The last inserted row id is: %d\n", id);

	  //GET messages for this client
	  printf("\n\nMESSAGES FROM CLIENTS:\n\n");



	  if (mysql_query(con, "SELECT * FROM client"))
	   {
		   finish_with_error(con);
	   }

	   MYSQL_RES *result = mysql_store_result(con);

	   if (result == NULL)
	   {
		   finish_with_error(con);
	   }

	   int num_fields = mysql_num_fields(result);

	   MYSQL_ROW row;

	   while ((row = mysql_fetch_row(result)))
	   {
		   for(int i = 0; i < num_fields; i++)
		   {
			   printf("%s ", row[i] ? row[i] : "NULL");
		   }
			   printf("\n");
	   }

	   mysql_free_result(result);

	   scanf("%s", str_code);
  }
  while(strcmp(str_code, "exit") == 0);

  mysql_close(con);
  exit(0);
}
